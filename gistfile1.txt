{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "from bs4 import BeautifulSoup\n",
    "import requests\n",
    "from pandas.io.html import read_html\n",
    "import pandas as pd\n",
    "from matplotlib import pyplot as plt \n",
    "import pandas as pd\n",
    "from sklearn.cluster import KMeans \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "source=requests.get(\"https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M\").text\n",
    "soup=BeautifulSoup(source)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_tables=soup.find_all('table')\n",
    "right_table=soup.find('table', class_='wikitable sortable')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "A=[]\n",
    "B=[]\n",
    "C=[]\n",
    "\n",
    "for i,row in enumerate(right_table.findAll('tr')):\n",
    "    cells = right_table.findAll('tr')[i].findAll('td')\n",
    "    #states=row.findAll('th') #To store second column data\n",
    "    if len(cells)==3: #Only extract table body not heading\n",
    "        A.append(cells[0].find(text=True))\n",
    "        B.append(cells[1].find(text=True))\n",
    "        C.append(cells[2].find(text=True))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighborhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M1A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M2A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PostalCode           Borough      Neighborhood\n",
       "0        M1A      Not assigned     Not assigned\n",
       "\n",
       "1        M2A      Not assigned     Not assigned\n",
       "\n",
       "2        M3A        North York         Parkwoods\n",
       "3        M4A        North York  Victoria Village\n",
       "4        M5A  Downtown Toronto      Harbourfront"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.DataFrame(A,columns=['PostalCode'])\n",
    "df['Borough']=B\n",
    "df['Neighborhood']=C\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighborhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Regent Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>M6A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Lawrence Heights</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PostalCode           Borough      Neighborhood\n",
       "2        M3A        North York         Parkwoods\n",
       "3        M4A        North York  Victoria Village\n",
       "4        M5A  Downtown Toronto      Harbourfront\n",
       "5        M5A  Downtown Toronto       Regent Park\n",
       "6        M6A        North York  Lawrence Heights"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=df.loc[df['Borough'] != 'Not assigned']\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,0,'Neighborhood')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x288 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax1=plt.subplot(1,3,1)\n",
    "ax1=df['PostalCode'].value_counts().plot(kind='bar',figsize=(15,4))\n",
    "ax1.set_xlabel('PostalCode')\n",
    "\n",
    "ax2=plt.subplot(1,3,2)\n",
    "ax2=df['Borough'].value_counts().plot(kind='bar',figsize=(15,4))\n",
    "ax2.set_xlabel('Borough')\n",
    "\n",
    "ax3=plt.subplot(1,3,3)\n",
    "ax3=df['Neighborhood'].value_counts().plot(kind='bar',figsize=(15,4))\n",
    "ax3.set_xlabel('Neighborhood')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "#file='https://github.com/KobiZohar/location-project-capstone/blob/master/Geospatial_Coordinates.csv'\n",
    "#postal_code=pd.read_csv('https://github.com/KobiZohar/location-project-capstone/blob/master/Geospatial_Coordinates.csv')\n",
    "url = \"http://cocl.us/Geospatial_data\"\n",
    "postal_code = pd.read_csv(url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M1B</td>\n",
       "      <td>43.806686</td>\n",
       "      <td>-79.194353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M1C</td>\n",
       "      <td>43.784535</td>\n",
       "      <td>-79.160497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M1E</td>\n",
       "      <td>43.763573</td>\n",
       "      <td>-79.188711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M1G</td>\n",
       "      <td>43.770992</td>\n",
       "      <td>-79.216917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M1H</td>\n",
       "      <td>43.773136</td>\n",
       "      <td>-79.239476</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Postal Code   Latitude  Longitude\n",
       "0         M1B  43.806686 -79.194353\n",
       "1         M1C  43.784535 -79.160497\n",
       "2         M1E  43.763573 -79.188711\n",
       "3         M1G  43.770992 -79.216917\n",
       "4         M1H  43.773136 -79.239476"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "postal_code.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1=pd.merge(df, postal_code, left_on=  ['PostalCode'],\n",
    "                   right_on= ['Postal Code'], \n",
    "                   how = 'left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1.drop('Postal Code',axis=1,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "      <td>43.753259</td>\n",
       "      <td>-79.329656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "      <td>43.725882</td>\n",
       "      <td>-79.315572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront</td>\n",
       "      <td>43.654260</td>\n",
       "      <td>-79.360636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Regent Park</td>\n",
       "      <td>43.654260</td>\n",
       "      <td>-79.360636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M6A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Lawrence Heights</td>\n",
       "      <td>43.718518</td>\n",
       "      <td>-79.464763</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PostalCode           Borough      Neighborhood   Latitude  Longitude\n",
       "0        M3A        North York         Parkwoods  43.753259 -79.329656\n",
       "1        M4A        North York  Victoria Village  43.725882 -79.315572\n",
       "2        M5A  Downtown Toronto      Harbourfront  43.654260 -79.360636\n",
       "3        M5A  Downtown Toronto       Regent Park  43.654260 -79.360636\n",
       "4        M6A        North York  Lawrence Heights  43.718518 -79.464763"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your credentails:\n",
      "CLIENT_ID: ZDIFMWFBVE5QV4NTOWZ2YWSOKZF2K5MBIKVW1QXKP3DOGCPS\n",
      "CLIENT_SECRET:AQVGWP3UHSLFIKIYFRARLCWH33V5XASJZ1335EJCZZI1U0NW\n"
     ]
    }
   ],
   "source": [
    "CLIENT_ID = 'ZDIFMWFBVE5QV4NTOWZ2YWSOKZF2K5MBIKVW1QXKP3DOGCPS' # your Foursquare ID\n",
    "CLIENT_SECRET = 'AQVGWP3UHSLFIKIYFRARLCWH33V5XASJZ1335EJCZZI1U0NW' # your Foursquare Secret\n",
    "VERSION = '20180605' # Foursquare API version\n",
    "\n",
    "print('Your credentails:')\n",
    "print('CLIENT_ID: ' + CLIENT_ID)\n",
    "print('CLIENT_SECRET:' + CLIENT_SECRET)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def getNearbyVenues(names, latitudes, longitudes, radius=500):\n",
    "    \n",
    "    venues_list=[]\n",
    "    for name, lat, lng in zip(names, latitudes, longitudes):\n",
    "        print(name)\n",
    "            \n",
    "        # create the API request URL\n",
    "        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n",
    "            CLIENT_ID, \n",
    "            CLIENT_SECRET, \n",
    "            VERSION, \n",
    "            lat, \n",
    "            lng, \n",
    "            radius, \n",
    "            LIMIT)\n",
    "            \n",
    "        # make the GET request\n",
    "        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n",
    "        \n",
    "        # return only relevant information for each nearby venue\n",
    "        venues_list.append([(\n",
    "            name, \n",
    "            lat, \n",
    "            lng, \n",
    "            v['venue']['name'], \n",
    "            v['venue']['location']['lat'], \n",
    "            v['venue']['location']['lng'],  \n",
    "            v['venue']['categories'][0]['name']) for v in results])\n",
    "\n",
    "    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n",
    "    nearby_venues.columns = ['Neighborhood', \n",
    "                  'Neighborhood Latitude', \n",
    "                  'Neighborhood Longitude', \n",
    "                  'Venue', \n",
    "                  'Venue Latitude', \n",
    "                  'Venue Longitude', \n",
    "                  'Venue Category']\n",
    "    \n",
    "    return(nearby_venues)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parkwoods\n",
      "Victoria Village\n",
      "Harbourfront\n",
      "Regent Park\n",
      "Lawrence Heights\n",
      "Lawrence Manor\n",
      "Not assigned\n",
      "\n",
      "Islington Avenue\n",
      "Rouge\n",
      "Malvern\n",
      "Don Mills North\n",
      "\n",
      "Woodbine Gardens\n",
      "Parkview Hill\n",
      "Ryerson\n",
      "Garden District\n",
      "\n",
      "Glencairn\n",
      "Cloverdale\n",
      "\n",
      "Islington\n",
      "Martin Grove\n",
      "\n",
      "Princess Gardens\n",
      "West Deane Park\n",
      "Highland Creek\n",
      "Rouge Hill\n",
      "Port Union\n",
      "Flemingdon Park\n",
      "Don Mills South\n",
      "\n",
      "Woodbine Heights\n",
      "St. James Town\n",
      "Humewood-Cedarvale\n",
      "Bloordale Gardens\n",
      "\n",
      "Eringate\n",
      "\n",
      "Markland Wood\n",
      "Old Burnhamthorpe\n",
      "\n",
      "Guildwood\n",
      "\n",
      "Morningside\n",
      "West Hill\n",
      "The Beaches\n",
      "Berczy Park\n",
      "Caledonia-Fairbanks\n",
      "\n",
      "Woburn\n",
      "Leaside\n",
      "Central Bay Street\n",
      "\n",
      "Christie\n",
      "\n",
      "Cedarbrae\n",
      "Hillcrest Village\n",
      "Bathurst Manor\n",
      "Downsview North\n",
      "\n",
      "Wilson Heights\n",
      "Thorncliffe Park\n",
      "Adelaide\n",
      "King\n",
      "Richmond\n",
      "\n",
      "Dovercourt Village\n",
      "Dufferin\n",
      "\n",
      "Scarborough Village\n",
      "Fairview\n",
      "\n",
      "Henry Farm\n",
      "Oriole\n",
      "\n",
      "Northwood Park\n",
      "York University\n",
      "East Toronto\n",
      "Harbourfront East\n",
      "\n",
      "Toronto Islands\n",
      "Union Station\n",
      "Little Portugal\n",
      "Trinity\n",
      "East Birchmount Park\n",
      "\n",
      "Ionview\n",
      "Kennedy Park\n",
      "Bayview Village\n",
      "CFB Toronto\n",
      "Downsview East\n",
      "\n",
      "The Danforth West\n",
      "\n",
      "Riverdale\n",
      "Design Exchange\n",
      "Toronto Dominion Centre\n",
      "Brockton\n",
      "\n",
      "Exhibition Place\n",
      "Parkdale Village\n",
      "Clairlea\n",
      "Golden Mile\n",
      "Oakridge\n",
      "Silver Hills\n",
      "York Mills\n",
      "Downsview West\n",
      "The Beaches West\n",
      "\n",
      "India Bazaar\n",
      "Commerce Court\n",
      "Victoria Hotel\n",
      "\n",
      "Maple Leaf Park\n",
      "North Park\n",
      "\n",
      "Upwood Park\n",
      "\n",
      "Humber Summit\n",
      "Cliffcrest\n",
      "Cliffside\n",
      "Scarborough Village West\n",
      "\n",
      "Newtonbrook\n",
      "Willowdale\n",
      "Downsview Central\n",
      "\n",
      "Studio District\n",
      "\n",
      "Bedford Park\n",
      "Lawrence Manor East\n",
      "\n",
      "Del Ray\n",
      "\n",
      "Keelesdale\n",
      "Mount Dennis\n",
      "Silverthorn\n",
      "Emery\n",
      "Humberlea\n",
      "Birch Cliff\n",
      "Cliffside West\n",
      "\n",
      "Willowdale South\n",
      "\n",
      "Downsview Northwest\n",
      "\n",
      "Lawrence Park\n",
      "Roselawn\n",
      "\n",
      "The Junction North\n",
      "\n",
      "Runnymede\n",
      "\n",
      "Weston\n",
      "Dorset Park\n",
      "Scarborough Town Centre\n",
      "Wexford Heights\n",
      "York Mills West\n",
      "\n",
      "Davisville North\n",
      "\n",
      "Forest Hill North\n",
      "Forest Hill West\n",
      "\n",
      "High Park\n",
      "The Junction South\n",
      "\n",
      "Westmount\n",
      "Maryvale\n",
      "Wexford\n",
      "Willowdale West\n",
      "North Toronto West\n",
      "\n",
      "The Annex\n",
      "North Midtown\n",
      "\n",
      "Yorkville\n",
      "Parkdale\n",
      "Roncesvalles\n",
      "Canada Post Gateway Processing Centre\n",
      "\n",
      "Kingsview Village\n",
      "Martin Grove Gardens\n",
      "\n",
      "Richview Gardens\n",
      "\n",
      "St. Phillips\n",
      "\n",
      "Agincourt\n",
      "Davisville\n",
      "\n",
      "Harbord\n",
      "\n",
      "University of Toronto\n",
      "Runnymede\n",
      "Swansea\n",
      "Clarks Corners\n",
      "\n",
      "Sullivan\n",
      "\n",
      "Tam O'Shanter\n",
      "Moore Park\n",
      "Summerhill East\n",
      "\n",
      "Chinatown\n",
      "Grange Park\n",
      "Kensington Market\n",
      "Agincourt North\n",
      "L'Amoreaux East\n",
      "\n",
      "Milliken\n",
      "Steeles East\n",
      "\n",
      "Deer Park\n",
      "Forest Hill SE\n",
      "\n",
      "Rathnelly\n",
      "South Hill\n",
      "Summerhill West\n",
      "\n",
      "CN Tower\n",
      "Bathurst Quay\n",
      "\n",
      "Island airport\n",
      "\n",
      "Harbourfront West\n",
      "\n",
      "King and Spadina\n",
      "Railway Lands\n",
      "South Niagara\n",
      "Humber Bay Shores\n",
      "\n",
      "Mimico South\n",
      "\n",
      "New Toronto\n",
      "Albion Gardens\n",
      "\n",
      "Beaumond Heights\n",
      "Humbergate\n",
      "\n",
      "Jamestown\n",
      "Mount Olive\n",
      "Silverstone\n",
      "South Steeles\n",
      "Thistletown\n",
      "L'Amoreaux West\n",
      "\n",
      "Steeles West\n",
      "Rosedale\n",
      "Stn A PO Boxes 25 The Esplanade\n",
      "\n",
      "Alderwood\n",
      "Long Branch\n",
      "Northwest\n",
      "Upper Rouge\n",
      "Cabbagetown\n",
      "St. James Town\n",
      "First Canadian Place\n",
      "Underground city\n",
      "The Kingsway\n",
      "Montgomery Road\n",
      "\n",
      "Old Mill North\n",
      "\n",
      "Church and Wellesley\n",
      "Business Reply Mail Processing Centre 969 Eastern\n",
      "\n",
      "Humber Bay\n",
      "King's Mill Park\n",
      "Kingsway Park South East\n",
      "\n",
      "Mimico NE\n",
      "Old Mill South\n",
      "The Queensway East\n",
      "Royal York South East\n",
      "Sunnylea\n",
      "Kingsway Park South West\n",
      "\n",
      "Mimico NW\n",
      "The Queensway West\n",
      "Royal York South West\n",
      "\n",
      "South of Bloor\n"
     ]
    }
   ],
   "source": [
    "LIMIT=100\n",
    "toronto_venues = getNearbyVenues(names=df1['Neighborhood'],\n",
    "                                   latitudes=df1['Latitude'],\n",
    "                                   longitudes=df1['Longitude']\n",
    "                                  )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Neighborhood Latitude</th>\n",
       "      <th>Neighborhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Parkwoods</td>\n",
       "      <td>43.753259</td>\n",
       "      <td>-79.329656</td>\n",
       "      <td>Brookbanks Park</td>\n",
       "      <td>43.751976</td>\n",
       "      <td>-79.332140</td>\n",
       "      <td>Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Parkwoods</td>\n",
       "      <td>43.753259</td>\n",
       "      <td>-79.329656</td>\n",
       "      <td>KFC</td>\n",
       "      <td>43.754387</td>\n",
       "      <td>-79.333021</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Parkwoods</td>\n",
       "      <td>43.753259</td>\n",
       "      <td>-79.329656</td>\n",
       "      <td>Variety Store</td>\n",
       "      <td>43.751974</td>\n",
       "      <td>-79.333114</td>\n",
       "      <td>Food &amp; Drink Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Victoria Village</td>\n",
       "      <td>43.725882</td>\n",
       "      <td>-79.315572</td>\n",
       "      <td>Victoria Village Arena</td>\n",
       "      <td>43.723481</td>\n",
       "      <td>-79.315635</td>\n",
       "      <td>Hockey Arena</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Victoria Village</td>\n",
       "      <td>43.725882</td>\n",
       "      <td>-79.315572</td>\n",
       "      <td>Portugril</td>\n",
       "      <td>43.725819</td>\n",
       "      <td>-79.312785</td>\n",
       "      <td>Portuguese Restaurant</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Neighborhood  Neighborhood Latitude  Neighborhood Longitude  \\\n",
       "0         Parkwoods              43.753259              -79.329656   \n",
       "1         Parkwoods              43.753259              -79.329656   \n",
       "2         Parkwoods              43.753259              -79.329656   \n",
       "3  Victoria Village              43.725882              -79.315572   \n",
       "4  Victoria Village              43.725882              -79.315572   \n",
       "\n",
       "                    Venue  Venue Latitude  Venue Longitude  \\\n",
       "0         Brookbanks Park       43.751976       -79.332140   \n",
       "1                     KFC       43.754387       -79.333021   \n",
       "2           Variety Store       43.751974       -79.333114   \n",
       "3  Victoria Village Arena       43.723481       -79.315635   \n",
       "4               Portugril       43.725819       -79.312785   \n",
       "\n",
       "          Venue Category  \n",
       "0                   Park  \n",
       "1   Fast Food Restaurant  \n",
       "2      Food & Drink Shop  \n",
       "3           Hockey Arena  \n",
       "4  Portuguese Restaurant  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "toronto_venues.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Yoga Studio</th>\n",
       "      <th>Accessories Store</th>\n",
       "      <th>Adult Boutique</th>\n",
       "      <th>Afghan Restaurant</th>\n",
       "      <th>Airport</th>\n",
       "      <th>Airport Food Court</th>\n",
       "      <th>Airport Gate</th>\n",
       "      <th>Airport Lounge</th>\n",
       "      <th>Airport Service</th>\n",
       "      <th>Airport Terminal</th>\n",
       "      <th>...</th>\n",
       "      <th>Turkish Restaurant</th>\n",
       "      <th>Vegetarian / Vegan Restaurant</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Video Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Warehouse Store</th>\n",
       "      <th>Wine Bar</th>\n",
       "      <th>Wine Shop</th>\n",
       "      <th>Wings Joint</th>\n",
       "      <th>Women's Store</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 282 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Yoga Studio  Accessories Store  Adult Boutique  Afghan Restaurant  Airport  \\\n",
       "0            0                  0               0                  0        0   \n",
       "1            0                  0               0                  0        0   \n",
       "2            0                  0               0                  0        0   \n",
       "3            0                  0               0                  0        0   \n",
       "4            0                  0               0                  0        0   \n",
       "\n",
       "   Airport Food Court  Airport Gate  Airport Lounge  Airport Service  \\\n",
       "0                   0             0               0                0   \n",
       "1                   0             0               0                0   \n",
       "2                   0             0               0                0   \n",
       "3                   0             0               0                0   \n",
       "4                   0             0               0                0   \n",
       "\n",
       "   Airport Terminal      ...        Turkish Restaurant  \\\n",
       "0                 0      ...                         0   \n",
       "1                 0      ...                         0   \n",
       "2                 0      ...                         0   \n",
       "3                 0      ...                         0   \n",
       "4                 0      ...                         0   \n",
       "\n",
       "   Vegetarian / Vegan Restaurant  Video Game Store  Video Store  \\\n",
       "0                              0                 0            0   \n",
       "1                              0                 0            0   \n",
       "2                              0                 0            0   \n",
       "3                              0                 0            0   \n",
       "4                              0                 0            0   \n",
       "\n",
       "   Vietnamese Restaurant  Warehouse Store  Wine Bar  Wine Shop  Wings Joint  \\\n",
       "0                      0                0         0          0            0   \n",
       "1                      0                0         0          0            0   \n",
       "2                      0                0         0          0            0   \n",
       "3                      0                0         0          0            0   \n",
       "4                      0                0         0          0            0   \n",
       "\n",
       "   Women's Store  \n",
       "0              0  \n",
       "1              0  \n",
       "2              0  \n",
       "3              0  \n",
       "4              0  \n",
       "\n",
       "[5 rows x 282 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# one hot encoding\n",
    "toronto_onehot = pd.get_dummies(toronto_venues[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n",
    "\n",
    "# add neighborhood column back to dataframe\n",
    "toronto_onehot['Neighborhood'] = toronto_venues['Neighborhood'] \n",
    "\n",
    "# move neighborhood column to the first column\n",
    "fixed_columns = [toronto_onehot.columns[-1]] + list(toronto_onehot.columns[:-1])\n",
    "toronto_onehot = toronto_onehot[fixed_columns]\n",
    "\n",
    "toronto_onehot.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Yoga Studio</th>\n",
       "      <th>Accessories Store</th>\n",
       "      <th>Adult Boutique</th>\n",
       "      <th>Afghan Restaurant</th>\n",
       "      <th>Airport</th>\n",
       "      <th>Airport Food Court</th>\n",
       "      <th>Airport Gate</th>\n",
       "      <th>Airport Lounge</th>\n",
       "      <th>Airport Service</th>\n",
       "      <th>...</th>\n",
       "      <th>Turkish Restaurant</th>\n",
       "      <th>Vegetarian / Vegan Restaurant</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Video Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Warehouse Store</th>\n",
       "      <th>Wine Bar</th>\n",
       "      <th>Wine Shop</th>\n",
       "      <th>Wings Joint</th>\n",
       "      <th>Women's Store</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Adelaide</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Agincourt North</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Albion Gardens</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Alderwood</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 282 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Neighborhood  Yoga Studio  Accessories Store  Adult Boutique  \\\n",
       "0         Adelaide          0.0                0.0             0.0   \n",
       "1        Agincourt          0.0                0.0             0.0   \n",
       "2  Agincourt North          0.0                0.0             0.0   \n",
       "3  Albion Gardens\n",
       "          0.0                0.0             0.0   \n",
       "4        Alderwood          0.0                0.0             0.0   \n",
       "\n",
       "   Afghan Restaurant  Airport  Airport Food Court  Airport Gate  \\\n",
       "0                0.0      0.0                 0.0           0.0   \n",
       "1                0.0      0.0                 0.0           0.0   \n",
       "2                0.0      0.0                 0.0           0.0   \n",
       "3                0.0      0.0                 0.0           0.0   \n",
       "4                0.0      0.0                 0.0           0.0   \n",
       "\n",
       "   Airport Lounge  Airport Service      ...        Turkish Restaurant  \\\n",
       "0             0.0              0.0      ...                       0.0   \n",
       "1             0.0              0.0      ...                       0.0   \n",
       "2             0.0              0.0      ...                       0.0   \n",
       "3             0.0              0.0      ...                       0.0   \n",
       "4             0.0              0.0      ...                       0.0   \n",
       "\n",
       "   Vegetarian / Vegan Restaurant  Video Game Store  Video Store  \\\n",
       "0                           0.01               0.0          0.0   \n",
       "1                           0.00               0.0          0.0   \n",
       "2                           0.00               0.0          0.0   \n",
       "3                           0.00               0.0          0.0   \n",
       "4                           0.00               0.0          0.0   \n",
       "\n",
       "   Vietnamese Restaurant  Warehouse Store  Wine Bar  Wine Shop  Wings Joint  \\\n",
       "0                    0.0              0.0      0.01        0.0          0.0   \n",
       "1                    0.0              0.0      0.00        0.0          0.0   \n",
       "2                    0.0              0.0      0.00        0.0          0.0   \n",
       "3                    0.0              0.0      0.00        0.0          0.0   \n",
       "4                    0.0              0.0      0.00        0.0          0.0   \n",
       "\n",
       "   Women's Store  \n",
       "0           0.01  \n",
       "1           0.00  \n",
       "2           0.00  \n",
       "3           0.00  \n",
       "4           0.00  \n",
       "\n",
       "[5 rows x 282 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "toronto_grouped = toronto_onehot.groupby('Neighborhood').mean().reset_index()\n",
    "toronto_grouped.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "----Adelaide----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.06\n",
      "1                 Café  0.05\n",
      "2      Thai Restaurant  0.04\n",
      "3           Steakhouse  0.04\n",
      "4  American Restaurant  0.04\n",
      "\n",
      "\n",
      "----Agincourt----\n",
      "            venue  freq\n",
      "0    Skating Rink  0.25\n",
      "1  Clothing Store  0.25\n",
      "2  Breakfast Spot  0.25\n",
      "3          Lounge  0.25\n",
      "4   Movie Theater  0.00\n",
      "\n",
      "\n",
      "----Agincourt North----\n",
      "                venue  freq\n",
      "0                Park  0.67\n",
      "1          Playground  0.33\n",
      "2  Miscellaneous Shop  0.00\n",
      "3       Movie Theater  0.00\n",
      "4               Motel  0.00\n",
      "\n",
      "\n",
      "----Albion Gardens\n",
      "----\n",
      "                 venue  freq\n",
      "0          Pizza Place   0.2\n",
      "1        Grocery Store   0.2\n",
      "2             Pharmacy   0.1\n",
      "3          Coffee Shop   0.1\n",
      "4  Fried Chicken Joint   0.1\n",
      "\n",
      "\n",
      "----Alderwood----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.18\n",
      "1            Pharmacy  0.09\n",
      "2        Skating Rink  0.09\n",
      "3  Athletics & Sports  0.09\n",
      "4        Dance Studio  0.09\n",
      "\n",
      "\n",
      "----Bathurst Manor----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.11\n",
      "1  Fried Chicken Joint  0.06\n",
      "2        Shopping Mall  0.06\n",
      "3     Sushi Restaurant  0.06\n",
      "4            Gift Shop  0.06\n",
      "\n",
      "\n",
      "----Bathurst Quay\n",
      "----\n",
      "              venue  freq\n",
      "0    Airport Lounge  0.14\n",
      "1  Airport Terminal  0.14\n",
      "2   Airport Service  0.14\n",
      "3     Boat or Ferry  0.07\n",
      "4  Sculpture Garden  0.07\n",
      "\n",
      "\n",
      "----Bayview Village----\n",
      "                 venue  freq\n",
      "0  Japanese Restaurant  0.25\n",
      "1                 Bank  0.25\n",
      "2   Chinese Restaurant  0.25\n",
      "3                 Café  0.25\n",
      "4        Metro Station  0.00\n",
      "\n",
      "\n",
      "----Beaumond Heights----\n",
      "                 venue  freq\n",
      "0          Pizza Place   0.2\n",
      "1        Grocery Store   0.2\n",
      "2             Pharmacy   0.1\n",
      "3          Coffee Shop   0.1\n",
      "4  Fried Chicken Joint   0.1\n",
      "\n",
      "\n",
      "----Bedford Park----\n",
      "                  venue  freq\n",
      "0      Sushi Restaurant  0.08\n",
      "1  Fast Food Restaurant  0.08\n",
      "2           Coffee Shop  0.08\n",
      "3    Italian Restaurant  0.08\n",
      "4              Pharmacy  0.04\n",
      "\n",
      "\n",
      "----Berczy Park----\n",
      "                venue  freq\n",
      "0         Coffee Shop  0.07\n",
      "1        Cocktail Bar  0.05\n",
      "2          Restaurant  0.05\n",
      "3              Bakery  0.04\n",
      "4  Seafood Restaurant  0.04\n",
      "\n",
      "\n",
      "----Birch Cliff----\n",
      "                      venue  freq\n",
      "0     General Entertainment  0.25\n",
      "1              Skating Rink  0.25\n",
      "2                      Café  0.25\n",
      "3           College Stadium  0.25\n",
      "4  Mediterranean Restaurant  0.00\n",
      "\n",
      "\n",
      "----Bloordale Gardens\n",
      "----\n",
      "            venue  freq\n",
      "0        Pharmacy  0.14\n",
      "1            Café  0.14\n",
      "2      Beer Store  0.14\n",
      "3    Liquor Store  0.14\n",
      "4  Shopping Plaza  0.14\n",
      "\n",
      "\n",
      "----Brockton\n",
      "----\n",
      "            venue  freq\n",
      "0            Café  0.11\n",
      "1  Breakfast Spot  0.11\n",
      "2     Coffee Shop  0.11\n",
      "3       Nightclub  0.05\n",
      "4         Stadium  0.05\n",
      "\n",
      "\n",
      "----Business Reply Mail Processing Centre 969 Eastern\n",
      "----\n",
      "                venue  freq\n",
      "0  Light Rail Station  0.11\n",
      "1         Yoga Studio  0.05\n",
      "2         Pizza Place  0.05\n",
      "3          Smoke Shop  0.05\n",
      "4          Skate Park  0.05\n",
      "\n",
      "\n",
      "----CFB Toronto----\n",
      "               venue  freq\n",
      "0           Bus Stop  0.33\n",
      "1            Airport  0.33\n",
      "2               Park  0.33\n",
      "3        Yoga Studio  0.00\n",
      "4  Mobile Phone Shop  0.00\n",
      "\n",
      "\n",
      "----CN Tower----\n",
      "              venue  freq\n",
      "0    Airport Lounge  0.14\n",
      "1  Airport Terminal  0.14\n",
      "2   Airport Service  0.14\n",
      "3     Boat or Ferry  0.07\n",
      "4  Sculpture Garden  0.07\n",
      "\n",
      "\n",
      "----Cabbagetown----\n",
      "         venue  freq\n",
      "0  Coffee Shop  0.08\n",
      "1   Restaurant  0.06\n",
      "2       Market  0.04\n",
      "3     Pharmacy  0.04\n",
      "4  Pizza Place  0.04\n",
      "\n",
      "\n",
      "----Caledonia-Fairbanks\n",
      "----\n",
      "                  venue  freq\n",
      "0                  Park  0.33\n",
      "1         Women's Store  0.17\n",
      "2  Fast Food Restaurant  0.17\n",
      "3                Market  0.17\n",
      "4              Pharmacy  0.17\n",
      "\n",
      "\n",
      "----Canada Post Gateway Processing Centre\n",
      "----\n",
      "                      venue  freq\n",
      "0               Coffee Shop  0.18\n",
      "1                     Hotel  0.18\n",
      "2  Mediterranean Restaurant  0.09\n",
      "3      Gym / Fitness Center  0.09\n",
      "4             Burrito Place  0.09\n",
      "\n",
      "\n",
      "----Cedarbrae----\n",
      "                  venue  freq\n",
      "0  Caribbean Restaurant  0.14\n",
      "1                Bakery  0.14\n",
      "2    Athletics & Sports  0.14\n",
      "3       Thai Restaurant  0.14\n",
      "4                  Bank  0.14\n",
      "\n",
      "\n",
      "----Central Bay Street\n",
      "----\n",
      "                venue  freq\n",
      "0         Coffee Shop  0.16\n",
      "1                Café  0.07\n",
      "2  Italian Restaurant  0.05\n",
      "3        Burger Joint  0.04\n",
      "4  Chinese Restaurant  0.04\n",
      "\n",
      "\n",
      "----Chinatown----\n",
      "                           venue  freq\n",
      "0                           Café  0.07\n",
      "1                            Bar  0.06\n",
      "2  Vegetarian / Vegan Restaurant  0.05\n",
      "3          Vietnamese Restaurant  0.05\n",
      "4                    Coffee Shop  0.04\n",
      "\n",
      "\n",
      "----Christie\n",
      "----\n",
      "               venue  freq\n",
      "0      Grocery Store  0.19\n",
      "1               Café  0.19\n",
      "2               Park  0.12\n",
      "3  Convenience Store  0.06\n",
      "4         Restaurant  0.06\n",
      "\n",
      "\n",
      "----Church and Wellesley----\n",
      "                 venue  freq\n",
      "0  Japanese Restaurant  0.07\n",
      "1          Coffee Shop  0.06\n",
      "2     Sushi Restaurant  0.06\n",
      "3              Gay Bar  0.05\n",
      "4         Burger Joint  0.03\n",
      "\n",
      "\n",
      "----Clairlea----\n",
      "                  venue  freq\n",
      "0              Bus Line   0.2\n",
      "1                Bakery   0.2\n",
      "2         Metro Station   0.1\n",
      "3          Soccer Field   0.1\n",
      "4  Fast Food Restaurant   0.1\n",
      "\n",
      "\n",
      "----Clarks Corners\n",
      "----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.22\n",
      "1            Pharmacy  0.11\n",
      "2        Noodle House  0.11\n",
      "3  Italian Restaurant  0.11\n",
      "4     Thai Restaurant  0.11\n",
      "\n",
      "\n",
      "----Cliffcrest----\n",
      "                 venue  freq\n",
      "0         Skating Rink  0.33\n",
      "1                Motel  0.33\n",
      "2  American Restaurant  0.33\n",
      "3        Moving Target  0.00\n",
      "4  Monument / Landmark  0.00\n",
      "\n",
      "\n",
      "----Cliffside----\n",
      "                 venue  freq\n",
      "0         Skating Rink  0.33\n",
      "1                Motel  0.33\n",
      "2  American Restaurant  0.33\n",
      "3        Moving Target  0.00\n",
      "4  Monument / Landmark  0.00\n",
      "\n",
      "\n",
      "----Cliffside West\n",
      "----\n",
      "                      venue  freq\n",
      "0     General Entertainment  0.25\n",
      "1              Skating Rink  0.25\n",
      "2                      Café  0.25\n",
      "3           College Stadium  0.25\n",
      "4  Mediterranean Restaurant  0.00\n",
      "\n",
      "\n",
      "----Cloverdale\n",
      "----\n",
      "           venue  freq\n",
      "0           Bank   1.0\n",
      "1    Yoga Studio   0.0\n",
      "2         Market   0.0\n",
      "3  Movie Theater   0.0\n",
      "4          Motel   0.0\n",
      "\n",
      "\n",
      "----Commerce Court----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.10\n",
      "1                 Café  0.07\n",
      "2                Hotel  0.06\n",
      "3           Restaurant  0.06\n",
      "4  American Restaurant  0.04\n",
      "\n",
      "\n",
      "----Davisville\n",
      "----\n",
      "              venue  freq\n",
      "0      Dessert Shop  0.08\n",
      "1       Pizza Place  0.08\n",
      "2    Sandwich Place  0.08\n",
      "3       Coffee Shop  0.06\n",
      "4  Sushi Restaurant  0.06\n",
      "\n",
      "\n",
      "----Davisville North\n",
      "----\n",
      "            venue  freq\n",
      "0             Gym  0.12\n",
      "1  Clothing Store  0.12\n",
      "2  Breakfast Spot  0.12\n",
      "3           Hotel  0.12\n",
      "4            Park  0.12\n",
      "\n",
      "\n",
      "----Deer Park----\n",
      "              venue  freq\n",
      "0               Pub  0.14\n",
      "1       Coffee Shop  0.14\n",
      "2        Sports Bar  0.07\n",
      "3  Sushi Restaurant  0.07\n",
      "4       Supermarket  0.07\n",
      "\n",
      "\n",
      "----Del Ray\n",
      "----\n",
      "                venue  freq\n",
      "0      Sandwich Place  0.25\n",
      "1  Turkish Restaurant  0.25\n",
      "2   Convenience Store  0.25\n",
      "3          Restaurant  0.25\n",
      "4       Movie Theater  0.00\n",
      "\n",
      "\n",
      "----Design Exchange----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.15\n",
      "1                 Café  0.09\n",
      "2                Hotel  0.08\n",
      "3           Restaurant  0.04\n",
      "4  American Restaurant  0.04\n",
      "\n",
      "\n",
      "----Don Mills North\n",
      "----\n",
      "                  venue  freq\n",
      "0   Japanese Restaurant   0.2\n",
      "1  Gym / Fitness Center   0.2\n",
      "2  Caribbean Restaurant   0.2\n",
      "3      Basketball Court   0.2\n",
      "4                  Café   0.2\n",
      "\n",
      "\n",
      "----Don Mills South\n",
      "----\n",
      "                   venue  freq\n",
      "0                    Gym  0.10\n",
      "1             Beer Store  0.10\n",
      "2            Coffee Shop  0.10\n",
      "3       Asian Restaurant  0.10\n",
      "4  General Entertainment  0.05\n",
      "\n",
      "\n",
      "----Dorset Park----\n",
      "                    venue  freq\n",
      "0       Indian Restaurant  0.29\n",
      "1               Pet Store  0.14\n",
      "2  Furniture / Home Store  0.14\n",
      "3   Vietnamese Restaurant  0.14\n",
      "4      Chinese Restaurant  0.14\n",
      "\n",
      "\n",
      "----Dovercourt Village----\n",
      "            venue  freq\n",
      "0        Pharmacy  0.10\n",
      "1     Supermarket  0.10\n",
      "2          Bakery  0.10\n",
      "3  Discount Store  0.05\n",
      "4     Pizza Place  0.05\n",
      "\n",
      "\n",
      "----Downsview Central\n",
      "----\n",
      "            venue  freq\n",
      "0  Baseball Field  0.33\n",
      "1    Home Service  0.33\n",
      "2      Food Truck  0.33\n",
      "3     Yoga Studio  0.00\n",
      "4   Movie Theater  0.00\n",
      "\n",
      "\n",
      "----Downsview East\n",
      "----\n",
      "               venue  freq\n",
      "0           Bus Stop  0.33\n",
      "1            Airport  0.33\n",
      "2               Park  0.33\n",
      "3        Yoga Studio  0.00\n",
      "4  Mobile Phone Shop  0.00\n",
      "\n",
      "\n",
      "----Downsview North\n",
      "----\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                 venue  freq\n",
      "0          Coffee Shop  0.11\n",
      "1  Fried Chicken Joint  0.06\n",
      "2        Shopping Mall  0.06\n",
      "3     Sushi Restaurant  0.06\n",
      "4            Gift Shop  0.06\n",
      "\n",
      "\n",
      "----Downsview Northwest\n",
      "----\n",
      "                  venue  freq\n",
      "0    Athletics & Sports  0.25\n",
      "1          Liquor Store  0.25\n",
      "2  Gym / Fitness Center  0.25\n",
      "3         Grocery Store  0.25\n",
      "4    Miscellaneous Shop  0.00\n",
      "\n",
      "\n",
      "----Downsview West----\n",
      "                venue  freq\n",
      "0       Grocery Store  0.25\n",
      "1                Park  0.25\n",
      "2       Shopping Mall  0.25\n",
      "3                Bank  0.25\n",
      "4  Miscellaneous Shop  0.00\n",
      "\n",
      "\n",
      "----Dufferin\n",
      "----\n",
      "            venue  freq\n",
      "0        Pharmacy  0.10\n",
      "1     Supermarket  0.10\n",
      "2          Bakery  0.10\n",
      "3  Discount Store  0.05\n",
      "4     Pizza Place  0.05\n",
      "\n",
      "\n",
      "----East Birchmount Park\n",
      "----\n",
      "                venue  freq\n",
      "0      Discount Store  0.29\n",
      "1       Train Station  0.14\n",
      "2         Bus Station  0.14\n",
      "3  Chinese Restaurant  0.14\n",
      "4    Department Store  0.14\n",
      "\n",
      "\n",
      "----East Toronto----\n",
      "               venue  freq\n",
      "0               Park  0.50\n",
      "1  Convenience Store  0.25\n",
      "2        Coffee Shop  0.25\n",
      "3        Yoga Studio  0.00\n",
      "4  Mobile Phone Shop  0.00\n",
      "\n",
      "\n",
      "----Emery----\n",
      "                 venue  freq\n",
      "0       Baseball Field   1.0\n",
      "1               Market   0.0\n",
      "2        Movie Theater   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Eringate\n",
      "----\n",
      "            venue  freq\n",
      "0        Pharmacy  0.14\n",
      "1            Café  0.14\n",
      "2      Beer Store  0.14\n",
      "3    Liquor Store  0.14\n",
      "4  Shopping Plaza  0.14\n",
      "\n",
      "\n",
      "----Exhibition Place----\n",
      "            venue  freq\n",
      "0            Café  0.11\n",
      "1  Breakfast Spot  0.11\n",
      "2     Coffee Shop  0.11\n",
      "3       Nightclub  0.05\n",
      "4         Stadium  0.05\n",
      "\n",
      "\n",
      "----Fairview\n",
      "----\n",
      "                  venue  freq\n",
      "0        Clothing Store  0.14\n",
      "1  Fast Food Restaurant  0.07\n",
      "2           Coffee Shop  0.06\n",
      "3                Bakery  0.03\n",
      "4      Asian Restaurant  0.03\n",
      "\n",
      "\n",
      "----First Canadian Place----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.08\n",
      "1                 Café  0.08\n",
      "2                Hotel  0.06\n",
      "3           Restaurant  0.05\n",
      "4  American Restaurant  0.04\n",
      "\n",
      "\n",
      "----Flemingdon Park----\n",
      "                   venue  freq\n",
      "0                    Gym  0.10\n",
      "1             Beer Store  0.10\n",
      "2            Coffee Shop  0.10\n",
      "3       Asian Restaurant  0.10\n",
      "4  General Entertainment  0.05\n",
      "\n",
      "\n",
      "----Forest Hill North----\n",
      "              venue  freq\n",
      "0     Jewelry Store  0.25\n",
      "1          Bus Line  0.25\n",
      "2             Trail  0.25\n",
      "3  Sushi Restaurant  0.25\n",
      "4       Yoga Studio  0.00\n",
      "\n",
      "\n",
      "----Forest Hill SE\n",
      "----\n",
      "              venue  freq\n",
      "0               Pub  0.14\n",
      "1       Coffee Shop  0.14\n",
      "2        Sports Bar  0.07\n",
      "3  Sushi Restaurant  0.07\n",
      "4       Supermarket  0.07\n",
      "\n",
      "\n",
      "----Forest Hill West\n",
      "----\n",
      "              venue  freq\n",
      "0     Jewelry Store  0.25\n",
      "1          Bus Line  0.25\n",
      "2             Trail  0.25\n",
      "3  Sushi Restaurant  0.25\n",
      "4       Yoga Studio  0.00\n",
      "\n",
      "\n",
      "----Garden District\n",
      "----\n",
      "                       venue  freq\n",
      "0                Coffee Shop  0.09\n",
      "1             Clothing Store  0.09\n",
      "2                       Café  0.04\n",
      "3  Middle Eastern Restaurant  0.03\n",
      "4             Cosmetics Shop  0.03\n",
      "\n",
      "\n",
      "----Glencairn----\n",
      "                 venue  freq\n",
      "0   Italian Restaurant   0.2\n",
      "1                 Park   0.2\n",
      "2               Bakery   0.2\n",
      "3                  Pub   0.2\n",
      "4  Japanese Restaurant   0.2\n",
      "\n",
      "\n",
      "----Golden Mile----\n",
      "                  venue  freq\n",
      "0              Bus Line   0.2\n",
      "1                Bakery   0.2\n",
      "2         Metro Station   0.1\n",
      "3          Soccer Field   0.1\n",
      "4  Fast Food Restaurant   0.1\n",
      "\n",
      "\n",
      "----Grange Park----\n",
      "                           venue  freq\n",
      "0                           Café  0.07\n",
      "1                            Bar  0.06\n",
      "2  Vegetarian / Vegan Restaurant  0.05\n",
      "3          Vietnamese Restaurant  0.05\n",
      "4                    Coffee Shop  0.04\n",
      "\n",
      "\n",
      "----Guildwood\n",
      "----\n",
      "                 venue  freq\n",
      "0          Pizza Place  0.17\n",
      "1  Rental Car Location  0.17\n",
      "2       Medical Center  0.17\n",
      "3   Mexican Restaurant  0.17\n",
      "4       Breakfast Spot  0.17\n",
      "\n",
      "\n",
      "----Harbord\n",
      "----\n",
      "         venue  freq\n",
      "0         Café  0.11\n",
      "1   Restaurant  0.06\n",
      "2  Coffee Shop  0.06\n",
      "3    Bookstore  0.06\n",
      "4      Theater  0.06\n",
      "\n",
      "\n",
      "----Harbourfront----\n",
      "         venue  freq\n",
      "0  Coffee Shop  0.16\n",
      "1       Bakery  0.06\n",
      "2         Café  0.06\n",
      "3         Park  0.06\n",
      "4          Pub  0.06\n",
      "\n",
      "\n",
      "----Harbourfront East\n",
      "----\n",
      "         venue  freq\n",
      "0  Coffee Shop  0.14\n",
      "1        Hotel  0.05\n",
      "2     Aquarium  0.05\n",
      "3  Pizza Place  0.04\n",
      "4         Café  0.04\n",
      "\n",
      "\n",
      "----Harbourfront West\n",
      "----\n",
      "              venue  freq\n",
      "0    Airport Lounge  0.14\n",
      "1  Airport Terminal  0.14\n",
      "2   Airport Service  0.14\n",
      "3     Boat or Ferry  0.07\n",
      "4  Sculpture Garden  0.07\n",
      "\n",
      "\n",
      "----Henry Farm----\n",
      "                  venue  freq\n",
      "0        Clothing Store  0.14\n",
      "1  Fast Food Restaurant  0.07\n",
      "2           Coffee Shop  0.06\n",
      "3                Bakery  0.03\n",
      "4      Asian Restaurant  0.03\n",
      "\n",
      "\n",
      "----High Park----\n",
      "                 venue  freq\n",
      "0   Mexican Restaurant  0.09\n",
      "1                 Café  0.09\n",
      "2  Arts & Crafts Store  0.04\n",
      "3          Flea Market  0.04\n",
      "4            Speakeasy  0.04\n",
      "\n",
      "\n",
      "----Highland Creek----\n",
      "           venue  freq\n",
      "0  Moving Target   0.5\n",
      "1            Bar   0.5\n",
      "2         Market   0.0\n",
      "3  Movie Theater   0.0\n",
      "4          Motel   0.0\n",
      "\n",
      "\n",
      "----Hillcrest Village----\n",
      "                      venue  freq\n",
      "0                   Dog Run  0.25\n",
      "1  Mediterranean Restaurant  0.25\n",
      "2                      Pool  0.25\n",
      "3               Golf Course  0.25\n",
      "4               Yoga Studio  0.00\n",
      "\n",
      "\n",
      "----Humber Bay----\n",
      "                 venue  freq\n",
      "0       Baseball Field   1.0\n",
      "1               Market   0.0\n",
      "2        Movie Theater   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Humber Bay Shores\n",
      "----\n",
      "         venue  freq\n",
      "0         Café  0.12\n",
      "1  Flower Shop  0.06\n",
      "2       Bakery  0.06\n",
      "3  Coffee Shop  0.06\n",
      "4   Restaurant  0.06\n",
      "\n",
      "\n",
      "----Humber Summit----\n",
      "                      venue  freq\n",
      "0       Empanada Restaurant   0.5\n",
      "1               Pizza Place   0.5\n",
      "2            Massage Studio   0.0\n",
      "3            Medical Center   0.0\n",
      "4  Mediterranean Restaurant   0.0\n",
      "\n",
      "\n",
      "----Humbergate\n",
      "----\n",
      "                 venue  freq\n",
      "0          Pizza Place   0.2\n",
      "1        Grocery Store   0.2\n",
      "2             Pharmacy   0.1\n",
      "3          Coffee Shop   0.1\n",
      "4  Fried Chicken Joint   0.1\n",
      "\n",
      "\n",
      "----Humberlea----\n",
      "                 venue  freq\n",
      "0       Baseball Field   1.0\n",
      "1               Market   0.0\n",
      "2        Movie Theater   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Humewood-Cedarvale----\n",
      "               venue  freq\n",
      "0       Hockey Arena  0.33\n",
      "1              Field  0.33\n",
      "2              Trail  0.33\n",
      "3        Yoga Studio  0.00\n",
      "4  Mobile Phone Shop  0.00\n",
      "\n",
      "\n",
      "----India Bazaar----\n",
      "                  venue  freq\n",
      "0           Pizza Place  0.05\n",
      "1          Intersection  0.05\n",
      "2  Fast Food Restaurant  0.05\n",
      "3             Pet Store  0.05\n",
      "4            Board Shop  0.05\n",
      "\n",
      "\n",
      "----Ionview----\n",
      "                venue  freq\n",
      "0      Discount Store  0.29\n",
      "1       Train Station  0.14\n",
      "2         Bus Station  0.14\n",
      "3  Chinese Restaurant  0.14\n",
      "4    Department Store  0.14\n",
      "\n",
      "\n",
      "----Island airport\n",
      "----\n",
      "              venue  freq\n",
      "0    Airport Lounge  0.14\n",
      "1  Airport Terminal  0.14\n",
      "2   Airport Service  0.14\n",
      "3     Boat or Ferry  0.07\n",
      "4  Sculpture Garden  0.07\n",
      "\n",
      "\n",
      "----Islington----\n",
      "           venue  freq\n",
      "0           Bank   1.0\n",
      "1    Yoga Studio   0.0\n",
      "2         Market   0.0\n",
      "3  Movie Theater   0.0\n",
      "4          Motel   0.0\n",
      "\n",
      "\n",
      "----Jamestown----\n",
      "                 venue  freq\n",
      "0          Pizza Place   0.2\n",
      "1        Grocery Store   0.2\n",
      "2             Pharmacy   0.1\n",
      "3          Coffee Shop   0.1\n",
      "4  Fried Chicken Joint   0.1\n",
      "\n",
      "\n",
      "----Keelesdale----\n",
      "                venue  freq\n",
      "0      Sandwich Place  0.25\n",
      "1  Turkish Restaurant  0.25\n",
      "2   Convenience Store  0.25\n",
      "3          Restaurant  0.25\n",
      "4       Movie Theater  0.00\n",
      "\n",
      "\n",
      "----Kennedy Park----\n",
      "                venue  freq\n",
      "0      Discount Store  0.29\n",
      "1       Train Station  0.14\n",
      "2         Bus Station  0.14\n",
      "3  Chinese Restaurant  0.14\n",
      "4    Department Store  0.14\n",
      "\n",
      "\n",
      "----Kensington Market----\n",
      "                           venue  freq\n",
      "0                           Café  0.07\n",
      "1                            Bar  0.06\n",
      "2  Vegetarian / Vegan Restaurant  0.05\n",
      "3          Vietnamese Restaurant  0.05\n",
      "4                    Coffee Shop  0.04\n",
      "\n",
      "\n",
      "----King----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.06\n",
      "1                 Café  0.05\n",
      "2      Thai Restaurant  0.04\n",
      "3           Steakhouse  0.04\n",
      "4  American Restaurant  0.04\n",
      "\n",
      "\n",
      "----King and Spadina----\n",
      "              venue  freq\n",
      "0    Airport Lounge  0.14\n",
      "1  Airport Terminal  0.14\n",
      "2   Airport Service  0.14\n",
      "3     Boat or Ferry  0.07\n",
      "4  Sculpture Garden  0.07\n",
      "\n",
      "\n",
      "----King's Mill Park----\n",
      "                 venue  freq\n",
      "0       Baseball Field   1.0\n",
      "1               Market   0.0\n",
      "2        Movie Theater   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Kingsview Village----\n",
      "               venue  freq\n",
      "0        Pizza Place  0.25\n",
      "1  Mobile Phone Shop  0.25\n",
      "2           Bus Line  0.25\n",
      "3               Park  0.25\n",
      "4      Movie Theater  0.00\n",
      "\n",
      "\n",
      "----Kingsway Park South East\n",
      "----\n",
      "                 venue  freq\n",
      "0       Baseball Field   1.0\n",
      "1               Market   0.0\n",
      "2        Movie Theater   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Kingsway Park South West\n",
      "----\n",
      "                  venue  freq\n",
      "0         Tanning Salon  0.07\n",
      "1  Fast Food Restaurant  0.07\n",
      "2           Flower Shop  0.07\n",
      "3       Supplement Shop  0.07\n",
      "4        Sandwich Place  0.07\n",
      "\n",
      "\n",
      "----L'Amoreaux East\n",
      "----\n",
      "                venue  freq\n",
      "0                Park  0.67\n",
      "1          Playground  0.33\n",
      "2  Miscellaneous Shop  0.00\n",
      "3       Movie Theater  0.00\n",
      "4               Motel  0.00\n",
      "\n",
      "\n",
      "----L'Amoreaux West\n",
      "----\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                  venue  freq\n",
      "0    Chinese Restaurant  0.15\n",
      "1  Fast Food Restaurant  0.15\n",
      "2           Pizza Place  0.08\n",
      "3              Pharmacy  0.08\n",
      "4        Breakfast Spot  0.08\n",
      "\n",
      "\n",
      "----Lawrence Heights----\n",
      "                    venue  freq\n",
      "0          Clothing Store  0.36\n",
      "1  Furniture / Home Store  0.14\n",
      "2                Boutique  0.07\n",
      "3       Accessories Store  0.07\n",
      "4               Gift Shop  0.07\n",
      "\n",
      "\n",
      "----Lawrence Manor----\n",
      "                    venue  freq\n",
      "0          Clothing Store  0.36\n",
      "1  Furniture / Home Store  0.14\n",
      "2                Boutique  0.07\n",
      "3       Accessories Store  0.07\n",
      "4               Gift Shop  0.07\n",
      "\n",
      "\n",
      "----Lawrence Manor East\n",
      "----\n",
      "                  venue  freq\n",
      "0      Sushi Restaurant  0.08\n",
      "1  Fast Food Restaurant  0.08\n",
      "2           Coffee Shop  0.08\n",
      "3    Italian Restaurant  0.08\n",
      "4              Pharmacy  0.04\n",
      "\n",
      "\n",
      "----Lawrence Park----\n",
      "                venue  freq\n",
      "0            Bus Line  0.25\n",
      "1  Dim Sum Restaurant  0.25\n",
      "2                Park  0.25\n",
      "3         Swim School  0.25\n",
      "4         Yoga Studio  0.00\n",
      "\n",
      "\n",
      "----Leaside----\n",
      "                 venue  freq\n",
      "0  Sporting Goods Shop  0.09\n",
      "1          Coffee Shop  0.09\n",
      "2         Burger Joint  0.06\n",
      "3        Grocery Store  0.06\n",
      "4            Pet Store  0.03\n",
      "\n",
      "\n",
      "----Little Portugal----\n",
      "              venue  freq\n",
      "0               Bar  0.13\n",
      "1       Men's Store  0.06\n",
      "2       Coffee Shop  0.05\n",
      "3  Asian Restaurant  0.05\n",
      "4              Café  0.03\n",
      "\n",
      "\n",
      "----Long Branch----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.18\n",
      "1            Pharmacy  0.09\n",
      "2        Skating Rink  0.09\n",
      "3  Athletics & Sports  0.09\n",
      "4        Dance Studio  0.09\n",
      "\n",
      "\n",
      "----Malvern----\n",
      "                       venue  freq\n",
      "0       Fast Food Restaurant   1.0\n",
      "1                Yoga Studio   0.0\n",
      "2  Middle Eastern Restaurant   0.0\n",
      "3                      Motel   0.0\n",
      "4        Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Maple Leaf Park----\n",
      "                        venue  freq\n",
      "0  Construction & Landscaping  0.25\n",
      "1                      Bakery  0.25\n",
      "2                        Park  0.25\n",
      "3            Basketball Court  0.25\n",
      "4                 Yoga Studio  0.00\n",
      "\n",
      "\n",
      "----Markland Wood----\n",
      "            venue  freq\n",
      "0        Pharmacy  0.14\n",
      "1            Café  0.14\n",
      "2      Beer Store  0.14\n",
      "3    Liquor Store  0.14\n",
      "4  Shopping Plaza  0.14\n",
      "\n",
      "\n",
      "----Martin Grove\n",
      "----\n",
      "           venue  freq\n",
      "0           Bank   1.0\n",
      "1    Yoga Studio   0.0\n",
      "2         Market   0.0\n",
      "3  Movie Theater   0.0\n",
      "4          Motel   0.0\n",
      "\n",
      "\n",
      "----Martin Grove Gardens\n",
      "----\n",
      "               venue  freq\n",
      "0        Pizza Place  0.25\n",
      "1  Mobile Phone Shop  0.25\n",
      "2           Bus Line  0.25\n",
      "3               Park  0.25\n",
      "4      Movie Theater  0.00\n",
      "\n",
      "\n",
      "----Maryvale----\n",
      "               venue  freq\n",
      "0        Auto Garage  0.17\n",
      "1  Accessories Store  0.17\n",
      "2     Breakfast Spot  0.17\n",
      "3             Bakery  0.17\n",
      "4      Shopping Mall  0.17\n",
      "\n",
      "\n",
      "----Milliken----\n",
      "                venue  freq\n",
      "0                Park  0.67\n",
      "1          Playground  0.33\n",
      "2  Miscellaneous Shop  0.00\n",
      "3       Movie Theater  0.00\n",
      "4               Motel  0.00\n",
      "\n",
      "\n",
      "----Mimico NE----\n",
      "                 venue  freq\n",
      "0       Baseball Field   1.0\n",
      "1               Market   0.0\n",
      "2        Movie Theater   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Mimico NW----\n",
      "                  venue  freq\n",
      "0         Tanning Salon  0.07\n",
      "1  Fast Food Restaurant  0.07\n",
      "2           Flower Shop  0.07\n",
      "3       Supplement Shop  0.07\n",
      "4        Sandwich Place  0.07\n",
      "\n",
      "\n",
      "----Mimico South\n",
      "----\n",
      "         venue  freq\n",
      "0         Café  0.12\n",
      "1  Flower Shop  0.06\n",
      "2       Bakery  0.06\n",
      "3  Coffee Shop  0.06\n",
      "4   Restaurant  0.06\n",
      "\n",
      "\n",
      "----Montgomery Road\n",
      "----\n",
      "                venue  freq\n",
      "0               River  0.33\n",
      "1                Park  0.33\n",
      "2          Smoke Shop  0.33\n",
      "3         Yoga Studio  0.00\n",
      "4  Miscellaneous Shop  0.00\n",
      "\n",
      "\n",
      "----Moore Park----\n",
      "                venue  freq\n",
      "0        Tennis Court  0.25\n",
      "1          Playground  0.25\n",
      "2          Restaurant  0.25\n",
      "3                 Gym  0.25\n",
      "4  Miscellaneous Shop  0.00\n",
      "\n",
      "\n",
      "----Morningside----\n",
      "                 venue  freq\n",
      "0          Pizza Place  0.17\n",
      "1  Rental Car Location  0.17\n",
      "2       Medical Center  0.17\n",
      "3   Mexican Restaurant  0.17\n",
      "4       Breakfast Spot  0.17\n",
      "\n",
      "\n",
      "----Mount Dennis----\n",
      "                venue  freq\n",
      "0      Sandwich Place  0.25\n",
      "1  Turkish Restaurant  0.25\n",
      "2   Convenience Store  0.25\n",
      "3          Restaurant  0.25\n",
      "4       Movie Theater  0.00\n",
      "\n",
      "\n",
      "----Mount Olive----\n",
      "                 venue  freq\n",
      "0          Pizza Place   0.2\n",
      "1        Grocery Store   0.2\n",
      "2             Pharmacy   0.1\n",
      "3          Coffee Shop   0.1\n",
      "4  Fried Chicken Joint   0.1\n",
      "\n",
      "\n",
      "----New Toronto----\n",
      "         venue  freq\n",
      "0         Café  0.12\n",
      "1  Flower Shop  0.06\n",
      "2       Bakery  0.06\n",
      "3  Coffee Shop  0.06\n",
      "4   Restaurant  0.06\n",
      "\n",
      "\n",
      "----North Midtown\n",
      "----\n",
      "            venue  freq\n",
      "0            Café  0.12\n",
      "1  Sandwich Place  0.12\n",
      "2     Coffee Shop  0.12\n",
      "3     Pizza Place  0.08\n",
      "4  Cosmetics Shop  0.04\n",
      "\n",
      "\n",
      "----North Park\n",
      "----\n",
      "                        venue  freq\n",
      "0  Construction & Landscaping  0.25\n",
      "1                      Bakery  0.25\n",
      "2                        Park  0.25\n",
      "3            Basketball Court  0.25\n",
      "4                 Yoga Studio  0.00\n",
      "\n",
      "\n",
      "----North Toronto West\n",
      "----\n",
      "                 venue  freq\n",
      "0       Clothing Store  0.17\n",
      "1          Coffee Shop  0.11\n",
      "2  Sporting Goods Shop  0.11\n",
      "3         Dessert Shop  0.06\n",
      "4   Chinese Restaurant  0.06\n",
      "\n",
      "\n",
      "----Northwest----\n",
      "                 venue  freq\n",
      "0            Drugstore  0.33\n",
      "1  Rental Car Location  0.33\n",
      "2                  Bar  0.33\n",
      "3          Yoga Studio  0.00\n",
      "4        Moving Target  0.00\n",
      "\n",
      "\n",
      "----Northwood Park----\n",
      "                    venue  freq\n",
      "0          Massage Studio   0.2\n",
      "1           Metro Station   0.2\n",
      "2  Furniture / Home Store   0.2\n",
      "3             Coffee Shop   0.2\n",
      "4                     Bar   0.2\n",
      "\n",
      "\n",
      "----Not assigned\n",
      "----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.22\n",
      "1  Japanese Restaurant  0.04\n",
      "2                Diner  0.04\n",
      "3                  Gym  0.04\n",
      "4     Sushi Restaurant  0.04\n",
      "\n",
      "\n",
      "----Oakridge----\n",
      "                  venue  freq\n",
      "0              Bus Line   0.2\n",
      "1                Bakery   0.2\n",
      "2         Metro Station   0.1\n",
      "3          Soccer Field   0.1\n",
      "4  Fast Food Restaurant   0.1\n",
      "\n",
      "\n",
      "----Old Burnhamthorpe\n",
      "----\n",
      "            venue  freq\n",
      "0        Pharmacy  0.14\n",
      "1            Café  0.14\n",
      "2      Beer Store  0.14\n",
      "3    Liquor Store  0.14\n",
      "4  Shopping Plaza  0.14\n",
      "\n",
      "\n",
      "----Old Mill North\n",
      "----\n",
      "                venue  freq\n",
      "0               River  0.33\n",
      "1                Park  0.33\n",
      "2          Smoke Shop  0.33\n",
      "3         Yoga Studio  0.00\n",
      "4  Miscellaneous Shop  0.00\n",
      "\n",
      "\n",
      "----Old Mill South----\n",
      "                 venue  freq\n",
      "0       Baseball Field   1.0\n",
      "1               Market   0.0\n",
      "2        Movie Theater   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Oriole\n",
      "----\n",
      "                  venue  freq\n",
      "0        Clothing Store  0.14\n",
      "1  Fast Food Restaurant  0.07\n",
      "2           Coffee Shop  0.06\n",
      "3                Bakery  0.03\n",
      "4      Asian Restaurant  0.03\n",
      "\n",
      "\n",
      "----Parkdale----\n",
      "                         venue  freq\n",
      "0               Breakfast Spot  0.12\n",
      "1                    Gift Shop  0.12\n",
      "2                    Bookstore  0.06\n",
      "3           Italian Restaurant  0.06\n",
      "4  Eastern European Restaurant  0.06\n",
      "\n",
      "\n",
      "----Parkdale Village----\n",
      "            venue  freq\n",
      "0            Café  0.11\n",
      "1  Breakfast Spot  0.11\n",
      "2     Coffee Shop  0.11\n",
      "3       Nightclub  0.05\n",
      "4         Stadium  0.05\n",
      "\n",
      "\n",
      "----Parkview Hill----\n",
      "                  venue  freq\n",
      "0           Pizza Place  0.15\n",
      "1  Fast Food Restaurant  0.15\n",
      "2              Pharmacy  0.08\n",
      "3          Intersection  0.08\n",
      "4             Pet Store  0.08\n",
      "\n",
      "\n",
      "----Parkwoods----\n",
      "                  venue  freq\n",
      "0  Fast Food Restaurant  0.33\n",
      "1     Food & Drink Shop  0.33\n",
      "2                  Park  0.33\n",
      "3           Yoga Studio  0.00\n",
      "4    Miscellaneous Shop  0.00\n",
      "\n",
      "\n",
      "----Port Union----\n",
      "           venue  freq\n",
      "0  Moving Target   0.5\n",
      "1            Bar   0.5\n",
      "2         Market   0.0\n",
      "3  Movie Theater   0.0\n",
      "4          Motel   0.0\n",
      "\n",
      "\n",
      "----Princess Gardens----\n",
      "           venue  freq\n",
      "0           Bank   1.0\n",
      "1    Yoga Studio   0.0\n",
      "2         Market   0.0\n",
      "3  Movie Theater   0.0\n",
      "4          Motel   0.0\n",
      "\n",
      "\n",
      "----Railway Lands----\n",
      "              venue  freq\n",
      "0    Airport Lounge  0.14\n",
      "1  Airport Terminal  0.14\n",
      "2   Airport Service  0.14\n",
      "3     Boat or Ferry  0.07\n",
      "4  Sculpture Garden  0.07\n",
      "\n",
      "\n",
      "----Rathnelly----\n",
      "              venue  freq\n",
      "0               Pub  0.14\n",
      "1       Coffee Shop  0.14\n",
      "2        Sports Bar  0.07\n",
      "3  Sushi Restaurant  0.07\n",
      "4       Supermarket  0.07\n",
      "\n",
      "\n",
      "----Regent Park----\n",
      "         venue  freq\n",
      "0  Coffee Shop  0.16\n",
      "1       Bakery  0.06\n",
      "2         Café  0.06\n",
      "3         Park  0.06\n",
      "4          Pub  0.06\n",
      "\n",
      "\n",
      "----Richmond\n",
      "----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.06\n",
      "1                 Café  0.05\n",
      "2      Thai Restaurant  0.04\n",
      "3           Steakhouse  0.04\n",
      "4  American Restaurant  0.04\n",
      "\n",
      "\n",
      "----Richview Gardens\n",
      "----\n",
      "               venue  freq\n",
      "0        Pizza Place  0.25\n",
      "1  Mobile Phone Shop  0.25\n",
      "2           Bus Line  0.25\n",
      "3               Park  0.25\n",
      "4      Movie Theater  0.00\n",
      "\n",
      "\n",
      "----Riverdale----\n",
      "                venue  freq\n",
      "0    Greek Restaurant  0.24\n",
      "1         Coffee Shop  0.10\n",
      "2      Ice Cream Shop  0.07\n",
      "3           Bookstore  0.05\n",
      "4  Italian Restaurant  0.05\n",
      "\n",
      "\n",
      "----Roncesvalles----\n",
      "                         venue  freq\n",
      "0               Breakfast Spot  0.12\n",
      "1                    Gift Shop  0.12\n",
      "2                    Bookstore  0.06\n",
      "3           Italian Restaurant  0.06\n",
      "4  Eastern European Restaurant  0.06\n",
      "\n",
      "\n",
      "----Rosedale----\n",
      "                venue  freq\n",
      "0                Park  0.50\n",
      "1          Playground  0.25\n",
      "2               Trail  0.25\n",
      "3         Yoga Studio  0.00\n",
      "4  Miscellaneous Shop  0.00\n",
      "\n",
      "\n",
      "----Roselawn\n",
      "----\n",
      "                 venue  freq\n",
      "0               Garden   1.0\n",
      "1          Yoga Studio   0.0\n",
      "2   Miscellaneous Shop   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Rouge----\n",
      "                       venue  freq\n",
      "0       Fast Food Restaurant   1.0\n",
      "1                Yoga Studio   0.0\n",
      "2  Middle Eastern Restaurant   0.0\n",
      "3                      Motel   0.0\n",
      "4        Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Rouge Hill----\n",
      "           venue  freq\n",
      "0  Moving Target   0.5\n",
      "1            Bar   0.5\n",
      "2         Market   0.0\n",
      "3  Movie Theater   0.0\n",
      "4          Motel   0.0\n",
      "\n",
      "\n",
      "----Royal York South East----\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                 venue  freq\n",
      "0       Baseball Field   1.0\n",
      "1               Market   0.0\n",
      "2        Movie Theater   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Royal York South West\n",
      "----\n",
      "                  venue  freq\n",
      "0         Tanning Salon  0.07\n",
      "1  Fast Food Restaurant  0.07\n",
      "2           Flower Shop  0.07\n",
      "3       Supplement Shop  0.07\n",
      "4        Sandwich Place  0.07\n",
      "\n",
      "\n",
      "----Runnymede----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.08\n",
      "1                Café  0.08\n",
      "2         Coffee Shop  0.08\n",
      "3  Italian Restaurant  0.05\n",
      "4    Sushi Restaurant  0.05\n",
      "\n",
      "\n",
      "----Runnymede\n",
      "----\n",
      "           venue  freq\n",
      "0    Pizza Place  0.25\n",
      "1  Grocery Store  0.25\n",
      "2         Bakery  0.25\n",
      "3       Bus Line  0.25\n",
      "4  Movie Theater  0.00\n",
      "\n",
      "\n",
      "----Ryerson----\n",
      "                       venue  freq\n",
      "0                Coffee Shop  0.09\n",
      "1             Clothing Store  0.09\n",
      "2                       Café  0.04\n",
      "3  Middle Eastern Restaurant  0.03\n",
      "4             Cosmetics Shop  0.03\n",
      "\n",
      "\n",
      "----Scarborough Town Centre----\n",
      "                    venue  freq\n",
      "0       Indian Restaurant  0.29\n",
      "1               Pet Store  0.14\n",
      "2  Furniture / Home Store  0.14\n",
      "3   Vietnamese Restaurant  0.14\n",
      "4      Chinese Restaurant  0.14\n",
      "\n",
      "\n",
      "----Scarborough Village----\n",
      "                venue  freq\n",
      "0                 Spa   0.5\n",
      "1          Playground   0.5\n",
      "2  Miscellaneous Shop   0.0\n",
      "3       Movie Theater   0.0\n",
      "4               Motel   0.0\n",
      "\n",
      "\n",
      "----Scarborough Village West\n",
      "----\n",
      "                 venue  freq\n",
      "0         Skating Rink  0.33\n",
      "1                Motel  0.33\n",
      "2  American Restaurant  0.33\n",
      "3        Moving Target  0.00\n",
      "4  Monument / Landmark  0.00\n",
      "\n",
      "\n",
      "----Silverstone----\n",
      "                 venue  freq\n",
      "0          Pizza Place   0.2\n",
      "1        Grocery Store   0.2\n",
      "2             Pharmacy   0.1\n",
      "3          Coffee Shop   0.1\n",
      "4  Fried Chicken Joint   0.1\n",
      "\n",
      "\n",
      "----Silverthorn----\n",
      "                venue  freq\n",
      "0      Sandwich Place  0.25\n",
      "1  Turkish Restaurant  0.25\n",
      "2   Convenience Store  0.25\n",
      "3          Restaurant  0.25\n",
      "4       Movie Theater  0.00\n",
      "\n",
      "\n",
      "----South Hill----\n",
      "              venue  freq\n",
      "0               Pub  0.14\n",
      "1       Coffee Shop  0.14\n",
      "2        Sports Bar  0.07\n",
      "3  Sushi Restaurant  0.07\n",
      "4       Supermarket  0.07\n",
      "\n",
      "\n",
      "----South Niagara----\n",
      "              venue  freq\n",
      "0    Airport Lounge  0.14\n",
      "1  Airport Terminal  0.14\n",
      "2   Airport Service  0.14\n",
      "3     Boat or Ferry  0.07\n",
      "4  Sculpture Garden  0.07\n",
      "\n",
      "\n",
      "----South Steeles----\n",
      "                 venue  freq\n",
      "0          Pizza Place   0.2\n",
      "1        Grocery Store   0.2\n",
      "2             Pharmacy   0.1\n",
      "3          Coffee Shop   0.1\n",
      "4  Fried Chicken Joint   0.1\n",
      "\n",
      "\n",
      "----South of Bloor----\n",
      "                  venue  freq\n",
      "0         Tanning Salon  0.07\n",
      "1  Fast Food Restaurant  0.07\n",
      "2           Flower Shop  0.07\n",
      "3       Supplement Shop  0.07\n",
      "4        Sandwich Place  0.07\n",
      "\n",
      "\n",
      "----St. James Town----\n",
      "         venue  freq\n",
      "0  Coffee Shop  0.07\n",
      "1   Restaurant  0.06\n",
      "2         Café  0.05\n",
      "3        Hotel  0.03\n",
      "4  Pizza Place  0.03\n",
      "\n",
      "\n",
      "----St. Phillips\n",
      "----\n",
      "               venue  freq\n",
      "0        Pizza Place  0.25\n",
      "1  Mobile Phone Shop  0.25\n",
      "2           Bus Line  0.25\n",
      "3               Park  0.25\n",
      "4      Movie Theater  0.00\n",
      "\n",
      "\n",
      "----Steeles East\n",
      "----\n",
      "                venue  freq\n",
      "0                Park  0.67\n",
      "1          Playground  0.33\n",
      "2  Miscellaneous Shop  0.00\n",
      "3       Movie Theater  0.00\n",
      "4               Motel  0.00\n",
      "\n",
      "\n",
      "----Steeles West----\n",
      "                  venue  freq\n",
      "0    Chinese Restaurant  0.15\n",
      "1  Fast Food Restaurant  0.15\n",
      "2           Pizza Place  0.08\n",
      "3              Pharmacy  0.08\n",
      "4        Breakfast Spot  0.08\n",
      "\n",
      "\n",
      "----Stn A PO Boxes 25 The Esplanade\n",
      "----\n",
      "          venue  freq\n",
      "0   Coffee Shop  0.11\n",
      "1    Restaurant  0.05\n",
      "2          Café  0.04\n",
      "3           Pub  0.03\n",
      "4  Cocktail Bar  0.03\n",
      "\n",
      "\n",
      "----Studio District\n",
      "----\n",
      "                 venue  freq\n",
      "0                 Café  0.10\n",
      "1          Coffee Shop  0.08\n",
      "2   Italian Restaurant  0.05\n",
      "3               Bakery  0.05\n",
      "4  American Restaurant  0.05\n",
      "\n",
      "\n",
      "----Sullivan\n",
      "----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.22\n",
      "1            Pharmacy  0.11\n",
      "2        Noodle House  0.11\n",
      "3  Italian Restaurant  0.11\n",
      "4     Thai Restaurant  0.11\n",
      "\n",
      "\n",
      "----Summerhill East\n",
      "----\n",
      "                venue  freq\n",
      "0        Tennis Court  0.25\n",
      "1          Playground  0.25\n",
      "2          Restaurant  0.25\n",
      "3                 Gym  0.25\n",
      "4  Miscellaneous Shop  0.00\n",
      "\n",
      "\n",
      "----Summerhill West\n",
      "----\n",
      "              venue  freq\n",
      "0               Pub  0.14\n",
      "1       Coffee Shop  0.14\n",
      "2        Sports Bar  0.07\n",
      "3  Sushi Restaurant  0.07\n",
      "4       Supermarket  0.07\n",
      "\n",
      "\n",
      "----Sunnylea----\n",
      "                 venue  freq\n",
      "0       Baseball Field   1.0\n",
      "1               Market   0.0\n",
      "2        Movie Theater   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----Swansea----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.08\n",
      "1                Café  0.08\n",
      "2         Coffee Shop  0.08\n",
      "3  Italian Restaurant  0.05\n",
      "4    Sushi Restaurant  0.05\n",
      "\n",
      "\n",
      "----Tam O'Shanter----\n",
      "                venue  freq\n",
      "0         Pizza Place  0.22\n",
      "1            Pharmacy  0.11\n",
      "2        Noodle House  0.11\n",
      "3  Italian Restaurant  0.11\n",
      "4     Thai Restaurant  0.11\n",
      "\n",
      "\n",
      "----The Annex----\n",
      "            venue  freq\n",
      "0            Café  0.12\n",
      "1  Sandwich Place  0.12\n",
      "2     Coffee Shop  0.12\n",
      "3     Pizza Place  0.08\n",
      "4  Cosmetics Shop  0.04\n",
      "\n",
      "\n",
      "----The Beaches----\n",
      "               venue  freq\n",
      "0        Coffee Shop  0.33\n",
      "1  Health Food Store  0.17\n",
      "2               Park  0.17\n",
      "3                Pub  0.17\n",
      "4        Yoga Studio  0.00\n",
      "\n",
      "\n",
      "----The Beaches West\n",
      "----\n",
      "                  venue  freq\n",
      "0           Pizza Place  0.05\n",
      "1          Intersection  0.05\n",
      "2  Fast Food Restaurant  0.05\n",
      "3             Pet Store  0.05\n",
      "4            Board Shop  0.05\n",
      "\n",
      "\n",
      "----The Danforth West\n",
      "----\n",
      "                venue  freq\n",
      "0    Greek Restaurant  0.24\n",
      "1         Coffee Shop  0.10\n",
      "2      Ice Cream Shop  0.07\n",
      "3           Bookstore  0.05\n",
      "4  Italian Restaurant  0.05\n",
      "\n",
      "\n",
      "----The Junction North\n",
      "----\n",
      "           venue  freq\n",
      "0    Pizza Place  0.25\n",
      "1  Grocery Store  0.25\n",
      "2         Bakery  0.25\n",
      "3       Bus Line  0.25\n",
      "4  Movie Theater  0.00\n",
      "\n",
      "\n",
      "----The Junction South\n",
      "----\n",
      "                 venue  freq\n",
      "0   Mexican Restaurant  0.09\n",
      "1                 Café  0.09\n",
      "2  Arts & Crafts Store  0.04\n",
      "3          Flea Market  0.04\n",
      "4            Speakeasy  0.04\n",
      "\n",
      "\n",
      "----The Kingsway----\n",
      "                venue  freq\n",
      "0               River  0.33\n",
      "1                Park  0.33\n",
      "2          Smoke Shop  0.33\n",
      "3         Yoga Studio  0.00\n",
      "4  Miscellaneous Shop  0.00\n",
      "\n",
      "\n",
      "----The Queensway East----\n",
      "                 venue  freq\n",
      "0       Baseball Field   1.0\n",
      "1               Market   0.0\n",
      "2        Movie Theater   0.0\n",
      "3                Motel   0.0\n",
      "4  Monument / Landmark   0.0\n",
      "\n",
      "\n",
      "----The Queensway West----\n",
      "                  venue  freq\n",
      "0         Tanning Salon  0.07\n",
      "1  Fast Food Restaurant  0.07\n",
      "2           Flower Shop  0.07\n",
      "3       Supplement Shop  0.07\n",
      "4        Sandwich Place  0.07\n",
      "\n",
      "\n",
      "----Thistletown----\n",
      "                 venue  freq\n",
      "0          Pizza Place   0.2\n",
      "1        Grocery Store   0.2\n",
      "2             Pharmacy   0.1\n",
      "3          Coffee Shop   0.1\n",
      "4  Fried Chicken Joint   0.1\n",
      "\n",
      "\n",
      "----Thorncliffe Park----\n",
      "               venue  freq\n",
      "0  Indian Restaurant  0.13\n",
      "1        Yoga Studio  0.07\n",
      "2      Grocery Store  0.07\n",
      "3               Park  0.07\n",
      "4        Coffee Shop  0.07\n",
      "\n",
      "\n",
      "----Toronto Dominion Centre----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.15\n",
      "1                 Café  0.09\n",
      "2                Hotel  0.08\n",
      "3           Restaurant  0.04\n",
      "4  American Restaurant  0.04\n",
      "\n",
      "\n",
      "----Toronto Islands----\n",
      "         venue  freq\n",
      "0  Coffee Shop  0.14\n",
      "1        Hotel  0.05\n",
      "2     Aquarium  0.05\n",
      "3  Pizza Place  0.04\n",
      "4         Café  0.04\n",
      "\n",
      "\n",
      "----Trinity----\n",
      "              venue  freq\n",
      "0               Bar  0.13\n",
      "1       Men's Store  0.06\n",
      "2       Coffee Shop  0.05\n",
      "3  Asian Restaurant  0.05\n",
      "4              Café  0.03\n",
      "\n",
      "\n",
      "----Underground city----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.08\n",
      "1                 Café  0.08\n",
      "2                Hotel  0.06\n",
      "3           Restaurant  0.05\n",
      "4  American Restaurant  0.04\n",
      "\n",
      "\n",
      "----Union Station----\n",
      "         venue  freq\n",
      "0  Coffee Shop  0.14\n",
      "1        Hotel  0.05\n",
      "2     Aquarium  0.05\n",
      "3  Pizza Place  0.04\n",
      "4         Café  0.04\n",
      "\n",
      "\n",
      "----University of Toronto----\n",
      "         venue  freq\n",
      "0         Café  0.11\n",
      "1   Restaurant  0.06\n",
      "2  Coffee Shop  0.06\n",
      "3    Bookstore  0.06\n",
      "4      Theater  0.06\n",
      "\n",
      "\n",
      "----Upwood Park\n",
      "----\n",
      "                        venue  freq\n",
      "0  Construction & Landscaping  0.25\n",
      "1                      Bakery  0.25\n",
      "2                        Park  0.25\n",
      "3            Basketball Court  0.25\n",
      "4                 Yoga Studio  0.00\n",
      "\n",
      "\n",
      "----Victoria Hotel\n",
      "----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.10\n",
      "1                 Café  0.07\n",
      "2                Hotel  0.06\n",
      "3           Restaurant  0.06\n",
      "4  American Restaurant  0.04\n",
      "\n",
      "\n",
      "----Victoria Village----\n",
      "                   venue  freq\n",
      "0           Hockey Arena   0.2\n",
      "1            Pizza Place   0.2\n",
      "2  Portuguese Restaurant   0.2\n",
      "3           Intersection   0.2\n",
      "4            Coffee Shop   0.2\n",
      "\n",
      "\n",
      "----West Deane Park----\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           venue  freq\n",
      "0           Bank   1.0\n",
      "1    Yoga Studio   0.0\n",
      "2         Market   0.0\n",
      "3  Movie Theater   0.0\n",
      "4          Motel   0.0\n",
      "\n",
      "\n",
      "----West Hill----\n",
      "                 venue  freq\n",
      "0          Pizza Place  0.17\n",
      "1  Rental Car Location  0.17\n",
      "2       Medical Center  0.17\n",
      "3   Mexican Restaurant  0.17\n",
      "4       Breakfast Spot  0.17\n",
      "\n",
      "\n",
      "----Westmount----\n",
      "                       venue  freq\n",
      "0                Pizza Place   0.2\n",
      "1  Middle Eastern Restaurant   0.2\n",
      "2         Chinese Restaurant   0.2\n",
      "3                Coffee Shop   0.2\n",
      "4             Sandwich Place   0.2\n",
      "\n",
      "\n",
      "----Weston----\n",
      "                venue  freq\n",
      "0                Park   1.0\n",
      "1         Yoga Studio   0.0\n",
      "2  Miscellaneous Shop   0.0\n",
      "3       Movie Theater   0.0\n",
      "4               Motel   0.0\n",
      "\n",
      "\n",
      "----Wexford----\n",
      "               venue  freq\n",
      "0        Auto Garage  0.17\n",
      "1  Accessories Store  0.17\n",
      "2     Breakfast Spot  0.17\n",
      "3             Bakery  0.17\n",
      "4      Shopping Mall  0.17\n",
      "\n",
      "\n",
      "----Wexford Heights----\n",
      "                    venue  freq\n",
      "0       Indian Restaurant  0.29\n",
      "1               Pet Store  0.14\n",
      "2  Furniture / Home Store  0.14\n",
      "3   Vietnamese Restaurant  0.14\n",
      "4      Chinese Restaurant  0.14\n",
      "\n",
      "\n",
      "----Willowdale South\n",
      "----\n",
      "                 venue  freq\n",
      "0           Restaurant  0.09\n",
      "1     Ramen Restaurant  0.09\n",
      "2          Coffee Shop  0.06\n",
      "3  Japanese Restaurant  0.06\n",
      "4                 Café  0.06\n",
      "\n",
      "\n",
      "----Willowdale West----\n",
      "                        venue  freq\n",
      "0                 Pizza Place  0.25\n",
      "1                    Pharmacy  0.25\n",
      "2                 Coffee Shop  0.25\n",
      "3                     Butcher  0.25\n",
      "4  Modern European Restaurant  0.00\n",
      "\n",
      "\n",
      "----Wilson Heights----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.11\n",
      "1  Fried Chicken Joint  0.06\n",
      "2        Shopping Mall  0.06\n",
      "3     Sushi Restaurant  0.06\n",
      "4            Gift Shop  0.06\n",
      "\n",
      "\n",
      "----Woburn----\n",
      "                        venue  freq\n",
      "0                 Coffee Shop  0.50\n",
      "1            Insurance Office  0.25\n",
      "2           Korean Restaurant  0.25\n",
      "3                 Yoga Studio  0.00\n",
      "4  Modern European Restaurant  0.00\n",
      "\n",
      "\n",
      "----Woodbine Gardens----\n",
      "                  venue  freq\n",
      "0           Pizza Place  0.15\n",
      "1  Fast Food Restaurant  0.15\n",
      "2              Pharmacy  0.08\n",
      "3          Intersection  0.08\n",
      "4             Pet Store  0.08\n",
      "\n",
      "\n",
      "----Woodbine Heights----\n",
      "            venue  freq\n",
      "0    Skating Rink   0.2\n",
      "1  Cosmetics Shop   0.1\n",
      "2        Pharmacy   0.1\n",
      "3            Park   0.1\n",
      "4     Video Store   0.1\n",
      "\n",
      "\n",
      "----York Mills West\n",
      "----\n",
      "                venue  freq\n",
      "0                Park  0.67\n",
      "1                Bank  0.33\n",
      "2         Yoga Studio  0.00\n",
      "3  Miscellaneous Shop  0.00\n",
      "4               Motel  0.00\n",
      "\n",
      "\n",
      "----York University----\n",
      "                    venue  freq\n",
      "0          Massage Studio   0.2\n",
      "1           Metro Station   0.2\n",
      "2  Furniture / Home Store   0.2\n",
      "3             Coffee Shop   0.2\n",
      "4                     Bar   0.2\n",
      "\n",
      "\n",
      "----Yorkville----\n",
      "            venue  freq\n",
      "0            Café  0.12\n",
      "1  Sandwich Place  0.12\n",
      "2     Coffee Shop  0.12\n",
      "3     Pizza Place  0.08\n",
      "4  Cosmetics Shop  0.04\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "num_top_venues = 5\n",
    "\n",
    "for hood in toronto_grouped['Neighborhood']:\n",
    "    print(\"----\"+hood+\"----\")\n",
    "    temp = toronto_grouped[toronto_grouped['Neighborhood'] == hood].T.reset_index()\n",
    "    temp.columns = ['venue','freq']\n",
    "    temp = temp.iloc[1:]\n",
    "    temp['freq'] = temp['freq'].astype(float)\n",
    "    temp = temp.round({'freq': 2})\n",
    "    print(temp.sort_values('freq', ascending=False).reset_index(drop=True).head(num_top_venues))\n",
    "    print('\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "def return_most_common_venues(row, num_top_venues):\n",
    "    row_categories = row.iloc[1:]\n",
    "    row_categories_sorted = row_categories.sort_values(ascending=False)\n",
    "    \n",
    "    return row_categories_sorted.index.values[0:num_top_venues]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Adelaide</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Café</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Thai Restaurant</td>\n",
       "      <td>Steakhouse</td>\n",
       "      <td>Asian Restaurant</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Hotel</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Gym</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Agincourt</td>\n",
       "      <td>Breakfast Spot</td>\n",
       "      <td>Lounge</td>\n",
       "      <td>Skating Rink</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Eastern European Restaurant</td>\n",
       "      <td>Dog Run</td>\n",
       "      <td>Doner Restaurant</td>\n",
       "      <td>Donut Shop</td>\n",
       "      <td>Drugstore</td>\n",
       "      <td>Dumpling Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Agincourt North</td>\n",
       "      <td>Park</td>\n",
       "      <td>Playground</td>\n",
       "      <td>Women's Store</td>\n",
       "      <td>Dumpling Restaurant</td>\n",
       "      <td>Diner</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Dog Run</td>\n",
       "      <td>Doner Restaurant</td>\n",
       "      <td>Donut Shop</td>\n",
       "      <td>Drugstore</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Albion Gardens</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Beer Store</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Fried Chicken Joint</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Construction &amp; Landscaping</td>\n",
       "      <td>Convenience Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Alderwood</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Pool</td>\n",
       "      <td>Skating Rink</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Pub</td>\n",
       "      <td>Athletics &amp; Sports</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Gym</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Neighborhood 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "0         Adelaide           Coffee Shop                  Café   \n",
       "1        Agincourt        Breakfast Spot                Lounge   \n",
       "2  Agincourt North                  Park            Playground   \n",
       "3  Albion Gardens\n",
       "           Pizza Place         Grocery Store   \n",
       "4        Alderwood           Pizza Place              Pharmacy   \n",
       "\n",
       "  3rd Most Common Venue 4th Most Common Venue        5th Most Common Venue  \\\n",
       "0   American Restaurant       Thai Restaurant                   Steakhouse   \n",
       "1          Skating Rink        Clothing Store  Eastern European Restaurant   \n",
       "2         Women's Store   Dumpling Restaurant                        Diner   \n",
       "3              Pharmacy           Coffee Shop                   Beer Store   \n",
       "4                  Pool          Skating Rink               Sandwich Place   \n",
       "\n",
       "  6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "0      Asian Restaurant                Bakery                 Hotel   \n",
       "1               Dog Run      Doner Restaurant            Donut Shop   \n",
       "2        Discount Store               Dog Run      Doner Restaurant   \n",
       "3        Sandwich Place   Fried Chicken Joint  Fast Food Restaurant   \n",
       "4          Dance Studio                   Pub    Athletics & Sports   \n",
       "\n",
       "        9th Most Common Venue 10th Most Common Venue  \n",
       "0                  Restaurant                    Gym  \n",
       "1                   Drugstore    Dumpling Restaurant  \n",
       "2                  Donut Shop              Drugstore  \n",
       "3  Construction & Landscaping      Convenience Store  \n",
       "4                 Coffee Shop                    Gym  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "num_top_venues = 10\n",
    "\n",
    "indicators = ['st', 'nd', 'rd']\n",
    "\n",
    "# create columns according to number of top venues\n",
    "columns = ['Neighborhood']\n",
    "for ind in np.arange(num_top_venues):\n",
    "    try:\n",
    "        columns.append('{}{} Most Common Venue'.format(ind+1, indicators[ind]))\n",
    "    except:\n",
    "        columns.append('{}th Most Common Venue'.format(ind+1))\n",
    "\n",
    "# create a new dataframe\n",
    "neighborhoods_venues_sorted = pd.DataFrame(columns=columns)\n",
    "neighborhoods_venues_sorted['Neighborhood'] = toronto_grouped['Neighborhood']\n",
    "\n",
    "for ind in np.arange(toronto_grouped.shape[0]):\n",
    "    neighborhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(toronto_grouped.iloc[ind, :], num_top_venues)\n",
    "\n",
    "neighborhoods_venues_sorted.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 2, 4, 2, 2, 2, 2, 2, 2, 2])"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# set number of clusters\n",
    "kclusters = 5\n",
    "\n",
    "toronto_grouped_clustering = toronto_grouped.drop('Neighborhood', 1)\n",
    "\n",
    "# run k-means clustering\n",
    "kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(toronto_grouped_clustering)\n",
    "\n",
    "# check cluster labels generated for each row in the dataframe\n",
    "kmeans.labels_[0:10] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
